// src/components/hs-code-widget.tsx
'use client';

import React, { useTransition } from 'react';
import type { Product, User } from '@/types';
import { Scale, Bot, Loader2, Info } from 'lucide-react';
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { useToast } from '@/hooks/use-toast';
import { runHsCodeClassification } from '@/lib/actions';
import { can } from '@/lib/permissions';
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';

interface HsCodeWidgetProps {
  product: Product;
  user: User;
  onUpdate: (updatedProduct: Product) => void;
  isAiEnabled: boolean;
}

export default function HsCodeWidget({
  product,
  user,
  onUpdate,
  isAiEnabled,
}: HsCodeWidgetProps) {
  const [isPending, startTransition] = useTransition();
  const { toast } = useToast();

  const handleRunClassification = () => {
    startTransition(async () => {
      try {
        const updatedProduct = await runHsCodeClassification(product.id, user.id);
        onUpdate(updatedProduct);
        toast({
          title: 'Classification Complete',
          description: 'HS Code has been generated by AI.',
        });
      } catch (error: any) {
        toast({
          title: 'Classification Failed',
          description:
            error.message || 'An error occurred while running the classification.',
          variant: 'destructive',
        });
      }
    });
  };

  const canClassify = can(user, 'product:classify_hs_code', product) && isAiEnabled;

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Scale /> HS Code
        </CardTitle>
        <CardDescription>
          The Harmonized System code for customs and trade classification.
        </CardDescription>
      </CardHeader>
      <CardContent>
        {product.hsCodeAnalysis ? (
          <div className="space-y-2">
            <p className="text-2xl font-bold font-mono text-primary">
              {product.hsCodeAnalysis.code}
            </p>
            <p className="text-sm text-muted-foreground">
              {product.hsCodeAnalysis.description}
            </p>
            <TooltipProvider>
              <Tooltip>
                <TooltipTrigger asChild>
                  <p className="text-xs text-muted-foreground flex items-center gap-1">
                    <Info className="h-3 w-3" />
                    Confidence: {Math.round(product.hsCodeAnalysis.confidence * 100)}%
                  </p>
                </TooltipTrigger>
                <TooltipContent>
                  <p>AI-assessed confidence in this classification.</p>
                </TooltipContent>
              </Tooltip>
            </TooltipProvider>
          </div>
        ) : (
          <p className="text-sm text-muted-foreground text-center py-4">
            No HS code has been classified for this product yet.
          </p>
        )}
      </CardContent>
      {canClassify && (
        <CardFooter>
          <Button
            onClick={handleRunClassification}
            disabled={isPending}
            className="w-full"
          >
            {isPending ? (
              <Loader2 className="mr-2 h-4 w-4 animate-spin" />
            ) : (
              <Bot className="mr-2 h-4 w-4" />
            )}
            {product.hsCodeAnalysis ? 'Reclassify with AI' : 'Classify with AI'}
          </Button>
        </CardFooter>
      )}
    </Card>
  );
}
