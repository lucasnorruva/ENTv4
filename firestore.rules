
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      // In a real app, you might check a custom claim or a 'roles' array in the user's doc.
      // For this mock, we'll check our mock user document.
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(['Admin']);
    }
    
    function isOwner(companyId) {
        return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
    }

    function isAuditorOrCompliance() {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(['Auditor', 'Compliance Manager']);
    }

    // COLLECTION RULES

    // Products can be read by any authenticated user for dashboards/catalogs.
    // Write permissions are restricted by ownership.
    match /products/{productId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.companyId);
      allow update: if isSignedIn() && isOwner(resource.data.companyId);
      allow delete: if isSignedIn() && isOwner(resource.data.companyId) && resource.data.status == 'Draft';
    }

    // Users can read their own profile. Admins can manage all users.
    match /users/{userId} {
      allow get: if isSignedIn();
      allow list: if isAdmin();
      allow create, update, delete: if isAdmin();
      allow update: if isUser(userId); // Allow users to update their own profile
    }
    
    // Companies can be read by any user, but only managed by admins.
    match /companies/{companyId} {
      allow read, list: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Compliance paths can be read by anyone, managed by admins/auditors/compliance mgrs.
    match /compliancePaths/{pathId} {
        allow read, list: if isSignedIn();
        allow write: if isAdmin() || isAuditorOrCompliance();
    }

    // Audit logs are sensitive and can only be listed by Admins. Any signed-in user can create one.
    match /auditLogs/{logId} {
        allow read, list: if isAdmin();
        allow create: if isSignedIn();
    }

    // API keys and webhooks are scoped to the user who created them.
    match /apiKeys/{keyId} {
        allow read, list, write: if isUser(resource.data.userId);
    }
    
    match /webhooks/{webhookId} {
        allow read, list, write: if isUser(resource.data.userId);
    }

    // Service tickets can be listed/read by relevant roles.
    match /serviceTickets/{ticketId} {
      allow read, list: if isSignedIn(); // Simplified for now
      allow write: if isSignedIn(); // Simplified for now
    }
    
    // Support tickets can be created by anyone, but only managed by admins.
    match /supportTickets/{ticketId} {
       allow read, list: if isAdmin();
       allow create: if true; // Open for anyone to create
       allow update, delete: if isAdmin();
    }
    
    // Production lines are managed by company owners (manufacturers).
    match /productionLines/{lineId} {
        allow read, list: if isSignedIn();
        // Allow write if the user is owner of the company associated with the line
        allow write: if isOwner(request.resource.data.companyId) || isOwner(resource.data.companyId);
    }

  }
}
